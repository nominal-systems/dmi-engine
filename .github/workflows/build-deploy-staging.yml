name: Build and Deploy - Staging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
env: 
  DOCKER_IMAGE: diagnostic-modality-integration-engine

jobs:

  build-push-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        docker build . \
        --file Dockerfile \
        --target production \
        --tag ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Push Docker image to Amazon ECR
      uses: appleboy/docker-ecr-action@v0.0.3
      with:
        registry: 216821345641.dkr.ecr.us-east-2.amazonaws.com
        repo: ${{ env.DOCKER_IMAGE }}
        tags: ${{ github.sha }}
    - name: Download task definition
      run: |
        aws ecs describe-task-definition \
        --task-definition line-dev-dmi-diagnostic-modality-integration-engine-task-definition \
        --query taskDefinition \
        > task-definition.json
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        image: 216821345641.dkr.ecr.us-east-2.amazonaws.com/diagnostic-modality-integration-engine:${{ github.sha }}
        container-name: ${{ env.DOCKER_IMAGE }}
    - name: Update ECS Task definition and deploy
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: line-dev-diagnostic-modality-integration-engine-service
        cluster: line-dev-dmi-cluster
        wait-for-service-stability: true
        force-new-deployment: true
