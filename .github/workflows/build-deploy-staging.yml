name: Build and Deploy - Staging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
env: 
  DOCKER_IMAGE: diagnostic-modality-integration-engine

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        docker build . \
        --file Dockerfile \
        --target production \
        --tag ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
  push:
    runs-on: ubuntu-latest
    steps:
      - name: Push Docker image to Amazon ECR
        uses: appleboy/docker-ecr-action@v0.0.3
        with:
          access_key: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          registry: 216821345641.dkr.ecr.us-east-2.amazonaws.com
          repo: ${{ env.DOCKER_IMAGE }}
          tags: ${{ github.sha }}
          region: us-east-2

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Download task definition
        run: |
          AWS_ACCESS_KEY_ID=${{ secrets.STAGING_AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }} aws ecs describe-task-definition \
          --task-definition line-dev-dmi-diagnostic-modality-integration-engine-task-definition \
          --query taskDefinition \
          > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          image: 216821345641.dkr.ecr.us-east-2.amazonaws.com/diagnostic-modality-integration-engine:${{ github.sha }}
      - name: Update ECS Task definition with new environment variables
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: line-dev-diagnostic-modality-integration-api-service
          cluster: line-dev-dmi-cluster
          wait-for-service-stability: true
          force-new-deployment: true
